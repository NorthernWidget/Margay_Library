/******************************************************************************
HighSpeed_Benchtop.ino
Demo script for high speed benchtop (high power) data logging. 

Bobby Schulz @ Northern Widget LLC
1/2/2019
https://github.com/NorthernWidget-Skunkworks/Margay_Library

Intended for sensor evaluation and calibration. 
Demo is constructed around BME280 and TP-Downhole units

"Information is the resolution of uncertainty"
-Claude Shannon

Distributed as-is; no warranty is given.
******************************************************************************/
#include "Margay.h"
#include "TP_Downhole.h"
#include "BME.h"

TP_Downhole DH; //Initalize TP-Downhole sensor
BME RH; //Initialzie BME280

String Header = ""; //Information header
uint8_t I2CVals[3] = {0x6A, 0x77, 0x76}; 

unsigned long UpdateRate = 150; //Number of milliseconds between readings 

Margay Logger(MODEL_2v2);

void setup() {
	Header = Header + DH.GetHeader() + RH.GetHeader();
	Logger.begin(I2CVals, sizeof(I2CVals), Header); //Pass header info to logger
	Init();
}

void loop() 
{
	static unsigned long Trigger = millis(); 
	if(millis() - Trigger > UpdateRate) {
    Logger.LED_Color(BLUE); //Switch on LED quickly to show logging
	Trigger = millis(); //Update trigger time when start of sample is made, so each start of sample is one UpdateRate apart
	Logger.addDataPoint(Update); //Add data generated by Update() function
    Logger.LED_Color(OFF); //Shut off LED
	}
	delay(1); //Ensure counter incrments
}

String Update() 
{
	return DH.GetString() + RH.GetString() + String(millis()) + ","; //Add millis() to the end of string to show more precise time
//  return RH.GetString() + String(millis()) + ","; //Add millis() to the end of string to show more precise time
}

void Init() 
{
	DH.begin(TP5v1);
	RH.begin(0x76);
 //Setup TP-Downhole for higher speed sensing by reducing resolution of temp mesurments 
	DH.ThermRes = 12; 
	DH.TempRes = ADC_256;
	DH.ThermRes = ADC_4096;
	Logger.initLogFile(); //Generate a new log file on each reset
}